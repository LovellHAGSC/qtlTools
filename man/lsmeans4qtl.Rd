% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsmeans4qtl.R
\name{lsmeans4qtl}
\alias{lsmeans4qtl}
\title{Using a QTL model, calcuate conditional QTL genotype effects}
\usage{
lsmeans4qtl(cross, phe = 1, form = NULL, mod, covar = NULL,
  prob.thresh = 0, ...)
}
\arguments{
\item{cross}{The qtl cross object used to generate the model. Must contain genotype
probabilities, calculated via calc.genoprob.}

\item{phe}{Character or numeric vector indicating the phenotype to be tested.
Only 1 phenotype can be tested at a time.}

\item{form}{Character formula that must match the QTL in the fitted QTL (mod) object.}

\item{mod}{A QTL model, generated by either makeqtl (etc.) or stepwiseqtl. The model
must be generated using what = "prob" (makeqtl) or method = "hk".}

\item{covar}{dataframe of covariates with names that match terms in the formula.
Each column must be either a character or factor. If a numeric vector was used to fit the
model, convert it to a factor by as.factor.}

\item{prob.thresh}{The genotype probability threshold required to call a genotype. If set at
.5 (default) all individuals are assigned genotype calls, otherwise, those with a probability
< prob.threshold are called as NA. Values closer to 1 are more stringent.}

\item{...}{additional arguments passed on to lsmeans.}
}
\value{
A dataframe of least square means statistics.
}
\description{
\code{lsmeans4qtl} Takes a QTL model, formula and returns SAS - style LSMeans.
*** Note: to use this function, the "lsmeans" package must be installed and loaded.
}
\details{
This function iterates through the terms in the formula, pulling out lsmeans.
It calls the function lsmeans from the lsmeans package, which calculates SAS-style
least square means.
}
\examples{
library(qtlTools)
library(lsmeans)
cross<-fake.bc
cross <- calc.genoprob(cross, step=2.5)
mod <- makeqtl(cross, chr = c(2,5), pos = c(40,25), what = "prob")
nform <- "y ~ Q1 + Q2 + Q1*sex + sex"
sex <- data.frame(sex = as.factor(cross$phe$sex))
lsmeans4qtl(cross, phe = "pheno1",form = nform, mod = mod, covar=sex)

}

