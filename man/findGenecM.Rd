% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findGenecM.R
\name{findGenecM}
\alias{findGenecM}
\title{Find the cM location of genes.}
\usage{
findGenecM(cross, marker.info, gff, gffCols = NULL,
  attributeParse = c("ID="), seqnameParse = c("Chr", "scaffold_"),
  dropNonColinearMarkers = TRUE, verbose = TRUE, ...)
}
\arguments{
\item{cross}{The qtl cross object.}

\item{marker.info}{The qtlTools standard data.frame containing map and physiical position of
markers. See details. The base-pair positions of the markers must be known.}

\item{gff}{The .gff file containing information about each gene. This object must be of
standard format containing field described in details.}

\item{gffCols}{If the gff file does not follow the standard format, this vector
specifies the chr,feature, start, end, strand and attribute columns of the supplied gff-like file.}

\item{attributeParse}{Character vector of strings to drop from the first element of
the attribute column. Defaults to "ID=".}

\item{seqnameParse}{Character vector of strings in the seqname gff column to remove
to make the cross chromosome names match the gff seqname. Defaults to c("Chr","scaffold")}

\item{dropNonColinearMarkers}{logical, should markers that are not in the right bp order
be dropped?}

\item{verbose}{Logical, should updates be reported?}

\item{...}{Not currently in use.}
}
\value{
The gff file, with three added columns:
\itemize{
  \item{"geneID"}{the parsed name of the attribute}
  \item{"bp"}{the average base pair position}
  \item{"pos"}{the inferred cM position}
}
}
\description{
\code{findGenecM} Using the physical position of genetic markers,
infer the mapping position of every gene.
}
\details{
standard gff fields are as follows:
\enumerate{
   \item{seqname: name of the chromosome or scaffold}
   \item{source: name of the program that generated this feature,
          or the data source (database or project name)}
   \item{feature: feature type name, e.g. Gene, Variation, Similarity
         **Note** the term "Gene" must be present in this column}
   \item{start: Start position of the feature,
         with sequence numbering starting at 1.}
   \item{end: End position of the feature,
         with sequence numbering starting at 1.}
   \item{score: A floating point value.}
   \item{strand: defined as + (forward) or - (reverse)}
   \item{frame: One of '0', '1' or '2'.
         '0' indicates that the first base of the feature is the first base of a codon,
         '1' that the second base is the first base of a codon, and so on..}
   \item{attribute: A semicolon-separated list of tag-value pairs,
         providing additional information about each feature.}
}
marker.info fields - names must match exactly. The first three fields can be
generated using qtlTools::pullMap(cross)
\enumerate{
     \item{marker.name: Marker names (rownames from pull.map with as.table=T)}
     \item{chr: the chromosome of the marker}
     \item{pos: the mapping position of the marker}
     \item{bp: the base-pair position of the marker}
}
}
\examples{
\dontrun{
library(qtl)
library(qtlTools)
data(multitrait)
map<-pullMap(multitrait)
#simulate the bp positions of the markers with
#low recombination at the center of the chromosome
map$bp<-0
for(i in unique(map$chr)){
  n<-sum(map$chr==i)
  p<-sin((1:n/n)*pi)
  map$bp[map$chr==i]<-cumsum(p*1000000)
}


#simulate a gff w/ 1000 genes
gff<-data.frame(chr = rep(paste0("scaffold_",1:5),each = 200),
   feature = rep("gene",1000),
   start = rep(seq(from = 0, to = max(map$bp), length = 200), 5),
   end = rep(seq(from = 0, to = max(map$bp), length = 200))+1000,
   strand = rep("+",1000),
   attribute = paste0("gene",1:1000,";","gene",1:1000,".1"), stringsAsFactors=F)
test<-findGenecM(cross = multitrait, marker.info = map, gff = gff,
   gffCols = c("chr","feature","start","end","strand","attribute"))

par(mfrow=c(3,2))
for(i in unique(map$chr)){
with(test[test$chr==i,], plot(pos,bp, col="grey"))
with(map[map$chr==i,], points(pos,bp, col=i, pch = 19, cex=.8))
}
}
}

