% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qtlStats.R
\name{qtlStats}
\alias{qtlStats}
\title{Extract statistics from a QTL model}
\usage{
qtlStats(cross, mod, pheno.col, form = NULL, covar = NULL,
  calcConfint = TRUE, estEffects = TRUE, model = "normal", ...)
}
\arguments{
\item{cross}{The qtl cross object with marker names that need to be changed.}

\item{mod}{A QTL model, generated by either makeqtl (etc.) or stepwiseqtl.}

\item{pheno.col}{Character or numeric vector of length 1, indicating the phenotype to be tested}

\item{form}{If a generic (not stepwiseqtl) qtl model is supplied and does
not contain a formula, this is required. The formula must match the QTL in the
fitted QTL (mod) object.}

\item{covar}{the covariate specified in the model / formula. See fitqtl.}

\item{calcConfint}{Should confidence intervals be calculated? If so, see ... Also
ensure that lodprofiles are included in the model.}

\item{estEffects}{Should allelic effects be calculated?}

\item{model}{Should a normal or binary model be fit?}

\item{...}{additional arguments passed on to calcCis.}
}
\value{
A dataframe of statistics.
}
\description{
\code{qtlStats} Pushes a QTL model through fitqtl and calculates confidence intervals.
}
\details{
A simple method to produce stats from a fitted model. Calls several R/qtl
functions depending on the user specifications. These include fitqtl, summary.fitqtl,
bayesint, dropint, and qtlTools::calcCis. The method of QTL inference is extracted from the QTL model.
}
\examples{
library(qtlTools)
data(fake.bc)
cross<-fake.bc
cross <- calc.genoprob(cross, step=2.5)
mod <- makeqtl(cross, chr = c(2,5), pos = c(40,25), what = "prob")
nform <- "y ~ Q1 + Q2 + Q1*sex + sex"
sex <- data.frame(sex = cross$phe$sex)
mod <- refineqtl(cross, mod, pheno.col = "pheno1", qtl = mod,
   formula = nform, covar = sex, method="hk")
qtlStats(cross, pheno.col = "pheno1",form = nform, mod = mod, covar=sex)

data(fake.f2)
cross<-fake.f2
cross <- calc.genoprob(cross, step=2.5)
mod <- makeqtl(cross, chr = c(1,13), pos = c(27.5,27.5), what = "prob")
nform <- "y ~ Q1 + Q2 + Q1*sex + sex"
sex <- data.frame(sex = cross$phe$sex)
mod <- refineqtl(cross, mod, pheno.col = 1, qtl = mod,
   formula = nform, covar = sex, method="hk")
qtlStats(cross, pheno.col = 1,form = nform, mod = mod, covar=sex)

}

