% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/newLG.R
\name{newLG}
\alias{newLG}
\title{Re-order markers and re-form linkage groups}
\usage{
newLG(cross, markerList, keep.rf = FALSE)
}
\arguments{
\item{cross}{The QTL cross object.}

\item{markerList}{A named list where element names are the chromosome IDs. Each
element must contain a character vector specifying marker names. Markers in
cross, but not in markerList will be dropped. Any markers in markerList that are not
in markernames(cross) will be dropped.}
}
\value{
A cross object with markers reordered.
}
\description{
\code{newLG} Using a named list of markers (list element names = LG names),
re-assign markers to linkage groups and re-orient markers. Most of the code is
taken from qtl::formLinkageGroups.#'
Note: all intermediate calculations are dropped. All chromosomes are set as
autosomes.
}
\details{
If any chromosomes are sex-specific, re-class such chromosomes after running
newLG: using class(cross$geno[["Xchrom"]]) <- "S" or whatever. The new map has
arbitrary cM positions where each marker is separated by 10cM. Run est.map to
get true cM positions.
}
\examples{
library(qtlTools)
data(fake.bc)
cross<-fake.bc
\dontrun{
fake.f2<-est.rf(fake.f2)
cross<-fake.f2
#Perturb the marker order and chromosome names
markerlist<-lapply(chrnames(cross), function(x) markernames(cross, chr =x))
names(markerlist) = sample(chrnames(cross),replace = F)
markerList<-lapply(markerlist, function(x) sample(x, replace = F))
#Make new cross with new marker order and chromosome names
cross2<-newLG(cross, markerList = markerList)

# completely perturb the genotype matrix, then pull back together
markerlist = list("1" = sample(markernames(cross), replace = F))
cross.noOrder<-newLG(cross, markerList = markerlist)
lgmar <- formLinkageGroups(cross.noOrder)
print(tab<-table(lgmar))
marlist<-lapply(1:length(unique(lgmar$LG)),
  function(x) rownames(lgmar)[lgmar$LG==x])
cross2<-newLG(cross = cross.noOrder,
              markerList = marlist)
}
}
