% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dropSimilarMarkers.R
\name{dropSimilarMarkers}
\alias{dropSimilarMarkers}
\title{Method to improve a genetic map.}
\usage{
dropSimilarMarkers(cross, chr = NULL, rf.threshold = 0.02, sd.weight = 1,
  na.weight = 1, keepEnds = FALSE, doNotDrop = NULL, verbose = TRUE,
  ...)
}
\arguments{
\item{cross}{The qtl cross object to search}

\item{chr}{The chromosome to scan. Can be a vector of chromosome names or a single name.
If NULL, run on all chromosomes.}

\item{rf.threshold}{The recombination fraction threshold to drop a marker. If est.rf has
not been run on cross, it will be done so automatically. See qtl::est.rf for details}

\item{sd.weight}{The weighting of segregation distortion rank in dropping a marker.
Higher values relative to na.weight increase the weight of the sd rank. Setting a value
of 0 removes sd as a factor in choosing the best marker.}

\item{na.weight}{Same as sd.weight, but for the number of NAs.}

\item{keepEnds}{Logical, should markers on the ends of the chromosomes always be retained?}

\item{doNotDrop}{Character vector of markers to retain no matter their rfs.}

\item{verbose}{Logical, should updates be printed?}

\item{...}{if recombination fractions are not included in the cross object,
pass on additional arguments to est.rf.}
}
\value{
A new cross object with the similar markers dropped.
}
\description{
\code{dropSimilarMarkers} finds markers that have a small recombination fraction and
drops the one with combined greater segregation distortion and/or missing data. ***Note:
if the cross object has many markers (>1000), avoid running this function on more than one
chromosome at a time. Also make sure to run est.rf first and use re.est.map = FALSE***
}
\examples{
set.seed(42)
map<-sim.map(len = c(50,20), n.mar = c(20,30), include.x=F)
cross0<-sim.cross(map, n.ind=50, type="f2", map.function="kosambi",
   error.prob=.01, missing.prob = .05)
cross0<-est.rf(cross0)
cross1<-dropSimilarMarkers(cross0)
cross2<-dropSimilarMarkers(cross0, keepEnds=T)
par(mfrow=c(2,1))
plot.map(cross0, cross1, main = "comparison of full and culled maps")
plot.map(cross0, cross2, main = "comparison of full and culled maps")

}

