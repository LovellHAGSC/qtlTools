% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/meanScan.R
\name{meanScan}
\alias{meanScan}
\title{Make a scanone plot of genotype means.}
\usage{
meanScan(cross, pheno.col = 1, covar = NULL, prob.thresh = 0,
  set.mfrow = FALSE, leg.pos = "topright", leg.inset = 0.001,
  leg.bty = "n", cols = NULL, ltys = NULL, ...)
}
\arguments{
\item{cross}{The qtl cross. Must contain genotype probabilities, calculated via calc.genoprob.
If the cross has an X chromosome, this is dropped, as the genotypes are different.}

\item{pheno.col}{Character or numeric vector indicating the phenotype to be tested.
Only 1 phenotype can be tested at a time.}

\item{covar}{dataframe of covariates with names that match terms in the formula.
Each column must be either a character or factor. If a numeric vector was used to fit the
model, convert it to a factor by as.factor.}

\item{prob.thresh}{The genotype probability threshold required to call a genotype. If set at
.5 (default) all individuals are assigned genotype calls, otherwise, those with a probability
< prob.threshold are called as NA. Values closer to 1 are more stringent.}

\item{set.mfrow}{Logical, Should the plotting window be set to the number of covariates?}

\item{leg.pos}{The character of numeric (length 2) position of the legend. Default is "topright".}

\item{leg.inset}{The numeric inset of the legend from the plot border.}

\item{leg.bty}{The border setting for the legend}

\item{cols}{The vector of colors for the lines in the plot (by genotype)}

\item{ltys}{The vector of linetypes}

\item{...}{additional arguments passed on to plot.scanone}
}
\value{
The plot
}
\description{
\code{meanScan} Like qtl:effectscan, but plots the genotypic means across the
marker / pseudomarker grid.
}
\details{
Calculates genotypic means at each marker/psuedomarker, plots them.
}
\examples{
\dontrun{
library(qtlTools)
library(qtl)
data(fake.bc)
cross<-fake.bc
cross<-calc.genoprob(cross)
meanScan(cross, covar = NULL)

# Some simple customization
meanScan(cross, covar = NULL, cols = c("black","orange"), ltys = c(1,2),
   leg.pos = "top", leg.inset = 0.02)

sex<-data.frame(sex = ifelse(pull.pheno(cross, "sex") == 0,"F","M"))
meanScan(cross, covar = sex, chr = c(2,7))

data(fake.f2)
cross<-fake.f2
cross<-calc.genoprob(cross)
meanScan(cross, covar = NULL)
sex<-data.frame(sex = ifelse(pull.pheno(cross, "sex") == 0,"F","M"))
meanScan(cross, covar = sex, chr = c(1,13))

data(fake.4way)
cross<-fake.4way
cross<-calc.genoprob(cross)
meanScan(cross, covar = NULL)
sex<-data.frame(sex = ifelse(pull.pheno(cross, "sex") == 0,"F","M"))
meanScan(cross, covar = sex, chr = c(2,7))
}

}

